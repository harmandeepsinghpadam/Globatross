"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initFormat = exports.simpleTime = exports.currentDateTime = exports.currentTime = exports.momentToUnix = exports.timestampToString = exports.momentToDate = exports.momToObj = exports.momToJson = exports.momToArray = exports.isCurrentMonday = exports.isLastMonday = exports.isToday = exports.diff = exports.fromNow = exports.isBetween = exports.isAfter = exports.isSame = exports.isBefore = exports.isCurrentYear = exports.currentYear = exports.isLeapYear = exports.isCurrentMonth = exports.currentMonth = exports.daysInMonth = exports.monthAfter = exports.monthBefore = exports.weekNumToday = exports.weekNum = exports.currentSunday = exports.currentMonday = exports.lastSunday = exports.lastMonday = exports.dayAfter = exports.dayBefore = exports.dayBeforYesterday = exports.yesterday = exports.tomorrow = exports.current = exports.timeFomat = exports.yearFormat = exports.monthFormat = exports.dateFormat = undefined;
exports.NowTimeCode = NowTimeCode;

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

var _number = require("./number");

var _string = require("./string");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dateFormat = exports.dateFormat = 'YYYY-MM-DD';
var monthFormat = exports.monthFormat = 'YYYY-MM';
var yearFormat = exports.yearFormat = 'YYYY';
var timeFomat = exports.timeFomat = 'YYYY-MM-DD HH:mm:ss';

//天相关
// 获取今天
var current = exports.current = function current() {
  var isFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  var date = (0, _moment2.default)();
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};
//获取明天,mom就是相对的日期，默认是今天
var tomorrow = exports.tomorrow = function tomorrow() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.add(1, 'd');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};
//获取昨天
var yesterday = exports.yesterday = function yesterday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.subtract(1, 'days');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取前天
var dayBeforYesterday = exports.dayBeforYesterday = function dayBeforYesterday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.subtract(2, 'days');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};
//获取前几天的日期，几天就是多少的num
var dayBefore = exports.dayBefore = function dayBefore(num) {
  var mom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _moment2.default)();
  var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var date = mom.subtract(num, 'days');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取后几天的日期，几天就是多少的num
var dayAfter = exports.dayAfter = function dayAfter(num) {
  var mom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _moment2.default)();
  var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var date = mom.add(num, 'days');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//周相关
//获取上周的周一
var lastMonday = exports.lastMonday = function lastMonday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.isoWeekday(-6);
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};
//上周的周日
var lastSunday = exports.lastSunday = function lastSunday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.isoWeekday(0);
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取本周周一
var currentMonday = exports.currentMonday = function currentMonday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.isoWeekday(1);
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};
//获取本周周日
var currentSunday = exports.currentSunday = function currentSunday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = mom.isoWeekday(7);
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取本周任意一天，比如周一就输入1
var weekNum = exports.weekNum = function weekNum(num) {
  var mom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _moment2.default)();
  var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var date = mom.isoWeekday(num);
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取今天是星期几
var weekNumToday = exports.weekNumToday = function weekNumToday() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();

  return mom.format('d');
};

//月相关
//获取几个月前，默认是获取一个月前
var monthBefore = exports.monthBefore = function monthBefore() {
  var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var mom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _moment2.default)();
  var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var date = mom.subtract(num, 'months');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取几个月后，默认是获取一个月后
var monthAfter = exports.monthAfter = function monthAfter() {
  var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var mom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _moment2.default)();
  var isFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  var date = mom.add(num, 'months');
  if (isFormat) {
    return date.format(dateFormat);
  } else {
    return date;
  }
};

//获取某个月有多少天
var daysInMonth = exports.daysInMonth = function daysInMonth(current) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : monthFormat;

  return (0, _moment2.default)(current, format).daysInMonth();
};

//获取本月
var currentMonth = exports.currentMonth = function currentMonth() {
  var isFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  var date = (0, _moment2.default)();
  if (isFormat) {
    return date.format(monthFormat);
  } else {
    return date;
  }
};

//是否是本月
var isCurrentMonth = exports.isCurrentMonth = function isCurrentMonth(year) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : monthFormat;

  var mom = (0, _moment2.default)(year, format);
  return isSame(mom.format(monthFormat), currentYear());
};

//年相关
// 是否是闰年
var isLeapYear = exports.isLeapYear = function isLeapYear(year) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  var mom = (0, _moment2.default)(year, format);
  return mom.isLeapYear();
};

//获取本年
var currentYear = exports.currentYear = function currentYear() {
  var isFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  var date = (0, _moment2.default)();
  if (isFormat) {
    return date.format(yearFormat);
  } else {
    return date;
  }
};

//是否是今年
var isCurrentYear = exports.isCurrentYear = function isCurrentYear(year) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : yearFormat;

  var mom = (0, _moment2.default)(year, format);
  return isSame(mom.format(yearFormat), currentYear());
};

//日期的比较计算相关,current是否在date之前,默认都是使用format来格式化日期
//是否在current之前
var isBefore = exports.isBefore = function isBefore(current, date) {
  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';
  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : dateFormat;

  var aa = (0, _moment2.default)(current, format).format('YYYY-MM-DD');
  var dd = (0, _moment2.default)(date, format).format('YYYY-MM-DD');

  return (0, _moment2.default)(aa).isBefore(dd, type);
};

//两个日期是否一样
var isSame = exports.isSame = function isSame(current, date) {
  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';
  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : dateFormat;

  var aa = (0, _moment2.default)(current, format).format('YYYY-MM-DD');
  var dd = (0, _moment2.default)(date, format).format('YYYY-MM-DD');

  return (0, _moment2.default)(aa).isSame(dd, type);
};

//是否晚于第二个时间
var isAfter = exports.isAfter = function isAfter(current, date) {
  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';
  var format = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : dateFormat;

  var aa = (0, _moment2.default)(current, format).format('YYYY-MM-DD');
  var dd = (0, _moment2.default)(date, format).format('YYYY-MM-DD');

  return (0, _moment2.default)(aa).isAfter(dd, type);
};

//是否在后面2个时间之间
var isBetween = exports.isBetween = function isBetween(current, date1, date2) {
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'day';
  var format = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : dateFormat;

  var aa = (0, _moment2.default)(current, format).format('YYYY-MM-DD');
  var dd1 = (0, _moment2.default)(date1, format).format('YYYY-MM-DD');
  var dd2 = (0, _moment2.default)(date2, format).format('YYYY-MM-DD');

  return (0, _moment2.default)(aa).isBetween(dd1, dd2, type);
};

//所给时间与现在的时间的距离
var fromNow = exports.fromNow = function fromNow(current) {
  var bool = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateFormat;

  return (0, _moment2.default)(current, format).fromNow(bool);
};

//时差,默认输出时间戳，可以输出具体的时间,type:days,months,years，relative，false是默认的，true是传递真正的时间
var diff = exports.diff = function diff(date1, date2) {
  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateFormat;
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var relative = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  var a = (0, _moment2.default)(date1, format);
  var b = (0, _moment2.default)(date2, format);

  if (type) {
    if (relative) {
      return a.diff(b, type, relative);
    } else {
      return a.diff(b, type);
    }
  } else {
    return a.diff(b);
  }
};

//是否是今天 date传字符串即可
var isToday = exports.isToday = function isToday(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if ((0, _string.isString)(date)) {
    return isSame(date, current(), 'day', format);
  } else {
    return false;
  }
};

//是否是上周一
var isLastMonday = exports.isLastMonday = function isLastMonday(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if ((0, _string.isString)(date)) {
    return isSame(date, lastMonday(), 'day', format);
  } else {
    return false;
  }
};

//是否是本周一
var isCurrentMonday = exports.isCurrentMonday = function isCurrentMonday() {
  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : current();
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if ((0, _string.isString)(date)) {
    return isSame(date, currentMonday(), 'day', format);
  } else {
    return false;
  }
};
//moment的转化
//moment转化成数组
var momToArray = exports.momToArray = function momToArray() {
  var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if (current) {
    return (0, _moment2.default)(current, format).toArray();
  } else {
    return (0, _moment2.default)().toArray();
  }
};

//转化成json
var momToJson = exports.momToJson = function momToJson() {
  var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if (current) {
    return (0, _moment2.default)().toJSON();
  } else {
    return (0, _moment2.default)(current, format).toJSON();
  }
};

//转化成对象
var momToObj = exports.momToObj = function momToObj() {
  var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  if (current) {
    return (0, _moment2.default)().toObject();
  } else {
    return (0, _moment2.default)(current, format).toObject();
  }
};

//moment对象转化为date对象
var momentToDate = exports.momentToDate = function momentToDate() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();

  return mom.toDate();
};

//时间戳转成字符串
var timestampToString = exports.timestampToString = function timestampToString(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : dateFormat;

  return (0, _moment2.default)(data).format(format);
};

//其他骚操作相关

//转换当前时间的Unix时间戳
var momentToUnix = exports.momentToUnix = function momentToUnix() {
  var mom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _moment2.default)();

  return mom.format('X');
};

//时间相关
//获取当前时间
var currentTime = exports.currentTime = function currentTime() {
  var isFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  var date = (0, _moment2.default)();
  if (isFormat) {
    return date.format('hh:m:ss');
  } else {
    return date;
  }
};

//获取当前日期加时间
var currentDateTime = exports.currentDateTime = function currentDateTime() {
  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : timeFomat;
  var isFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  var date = (0, _moment2.default)();
  if (isFormat) {
    return date.format(timeFomat);
  } else {
    return date;
  }
};

//获取简易的时间
// moment(new Date()).format('MM月DD日'); --- 09月01日
// moment(new Date()).format('MMM'); --- 9月
// moment(new Date()).format('MMMM'); --- 九月
// moment(new Date()).format('dd'); --- 六
// moment(new Date()).format('ddd'); --- 周六
// moment(new Date()).format('dddd'); --- 星期六
// moment(new Date()).isoWeekday(); --- 6
// moment(new Date()).isoWeekYear(); --- 2018
// moment(new Date()).format('LT'); --- 16:56
// moment(new Date()).format('LTS'); --- 16:56:34
// moment(new Date()).format('L'); --- 2018-09-01
// moment(new Date()).format('LL'); --- 2018年09月01日
// moment(new Date()).format('LLL'); --- 2018年09月01日下午4点56分
// moment(new Date()).format('LLLL'); --- 2018年09月01日星期六下午4点56分
// moment(new Date()).format('l'); --- 2018-9-1
// moment(new Date()).format('ll'); --- 2018年9月1日
// moment(new Date()).format('lll'); --- 2018年9月1日 16:56
// moment(new Date()).format('llll'); --- 2018年9月1日星期六 16:56
// moment(new Date()).format('A'); --- 下午
// moment(new Date()).format('a'); --- 下午
// moment(new Date()).format('ALT') --- 下午17:09
var simpleTime = exports.simpleTime = function simpleTime() {
  var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var formatSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MM月DD日';
  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dateFormat;

  if (current) {
    return (0, _moment2.default)(current, format).format('a');
  } else {
    return (0, _moment2.default)().format('a');
  }
};

//时间戳

//获取时间戳20170626164644864，就是这种类型
function NowTimeCode() {
  var Result = "";

  var now = new Date();

  var year = now.getYear();

  if (now.getYear() < 1900) {
    year = now.getYear() + 1900;
  }

  var month = now.getMonth() + 1;
  var day = now.getDate();
  var hour = now.getHours();
  var minutes = now.getMinutes();
  var second = now.getSeconds();
  var millisecond = now.getMilliseconds();

  if (month < 10) month = "0" + month;
  if (day < 10) day = "0" + day;
  if (hour < 10) hour = "0" + hour;
  if (minutes < 10) minutes = "0" + minutes;
  if (second < 10) second = "0" + second;

  if (millisecond < 10) millisecond = "00" + millisecond;else {
    if (millisecond < 100) {
      millisecond = "0" + millisecond;
    }
  }

  Result = year.toString() + month.toString() + day.toString() + hour.toString() + minutes.toString() + second.toString() + millisecond.toString();

  return Result;
}

var initFormat = exports.initFormat = function initFormat(_dateFormat, _monthFormat) {
  exports.dateFormat = dateFormat = _dateFormat;
  exports.monthFormat = monthFormat = _monthFormat;
};